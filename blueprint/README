This is a blueprint for the HasPrimitives project.

The blueprint is, in most part, an HTML render of a LaTeX document, which is
located at blueprint.tex.

The HTMl render is handled by plasTeX, which was written by Patrick Massot. So
to generate the blueprint, you will need to get plasTeX, which is available
as a pip package:
  pip install plasTeX
or from github:
  https://github.com/plastex/plastex
Basic usage of plasTeX is documented here:
  http://plastex.github.io/plastex/getting_started/
and, in more detail, here:
  http://plastex.github.io/plastex/plastex/index.html

However, blueprint offers more than just an HTML version of the documentation:
it automatically links lean code with theorems, lemmas and definitions in the
LaTeX file.

For this to work, you will need to download the leanblueprint plugin. A lean 4
version is available from
  https://github.com/PatrickMassot/leanblueprint
To install it, use
  pip install git+https://github.com/PatrickMassot/leanblueprint
(Note that this requires graphviz, which you can install using your package
manager).

Now, the leanblueprint plugin doesn't actually link to lean code. Instead, it
links to your project documentation. In particular, this means you need project
documentation, in the format supported by leanblueprint. Fortunately, you can
generate the documentation automatically using 'doc-gen4':
  https://github.com/leanprover/doc-gen4
To do so, run
  lake -R -Kenv=dev build HasPrimitives:docs
The generated doc will be in the directory '.lake/build/doc'. Now, here's
something that I've found that is useful, but is not officially supported: if,
for some reason, the doc generation is incomplete, it will be wholy unusable,
as supporting html, css and js files will not be copied to build/doc. You can
make the incomplete doc usable by running
  lake -R -Kenv=dev exe doc-gen4 index

OK, now you are ready to generate the blueprint.
  cd blueprint
  plastex -c plastex.cfg blueprint.tex
This will generate the blueprint in the 'blueprint/web' directory.

Now, to view the blueprint and docs, 'cd' back to the project directory
  cd ../
and start an http server (if you don't do this, you won't be able to get nice
latex math symbols):
  python -m http.server
Next, from a browser, open
  http://localhost:8000/blueprint/web
and you should be good to go!

